<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="the_select_projection_list"> 
  <title>SELECT Projection List</title> 
  <prolog audience="basic"> 
  </prolog> 
  <conbody> 
	 <section id="section_578BB51503FF45B3B540B050EDCB8D1A"> 
		<p>The projections in the SELECT projection list are used to transform
		  the results of the WHERE search operation. The projection list is either
		  specified as * or as a comma delimited list of expressions. For *, the interim
		  results of the WHERE clause are returned from the query. Otherwise, the set of
		  objects in the interim results are iterated and the projections applied to each
		  of the objects. During the application of the projection list, the attributes
		  of the objects being traversed are in scope for name resolution.
		</p> 
		<p>You can specify retrieval of the entry keys in your projection list.
		  This allows you to access the associated cached entries for modification and
		  other purposes. The following example shows how the 
		  <codeph>Region</codeph> entry key can be obtained by using the region
		  entries in the FROM clause and using appropriate projections. This query
		  returns a set of 
		  <codeph>struct&lt;key:string, id:string, secId:string&gt;</codeph>:
		  <codeblock>SELECT DISTINCT key, entry.value.id, posnVal.secId 
    FROM /portfolios.entrySet entry, entry.value.positions.values posnVal 
    WHERE entry.value."type" = 'xyz' AND posnVal.secId = 'XXX'</codeblock>
		</p> 
		<p>You can assign arbitrary names to the return values by using the
		  fieldname:expression syntax in the projection list. This modification to the
		  query results in a set of 
		  <codeph>struct&lt;newKey:string, newId:string,
			 newSecId:string&gt;</codeph>:
		  <codeblock>SELECT DISTINCT newKey: entry.key, newId: entry.value.id, newSecId: posnVal.secId 
    FROM /portfolios.entrySet entry, entry.value.positions.values posnVal 
    WHERE entry.value."type" = 'xyz' AND posnVal.secId = 'XXX'</codeblock>
		</p> 
	 </section> 
  </conbody> 
</concept> 
